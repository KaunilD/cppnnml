/'
* Copyright (c) 2020 Intel Corporation
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*'/

@startuml
class InputLayerType {
}

class InnerHiddenLayerManager {
}

class LastHiddenLayerType {
}

class OutputLayerType {
}

class TrainingPolicyType {
}

class GradientsManagerType {
}

class TransferFunctionsPolicy {
}

class MultilayerPerceptron {
+{static} size_t NeuralNetworkNumberOfHiddenLayers
+{static} size_t NumberOfInnerHiddenLayers
+{static} size_t NumberOfInputLayerNeurons
+{static} size_t NumberOfHiddenLayerNeurons
+{static} size_t NumberOfOutputLayerNeurons
+{static} size_t NeuralNetworkRecurrentConnectionDepth
+{static} size_t NeuralNetworkBatchSize
#ValueType mError
}

class RecurrentMultilayerPerceptron {
}

MultilayerPerceptron *-- InputLayerType
MultilayerPerceptron *-- InnerHiddenLayerManager
MultilayerPerceptron *-- LastHiddenLayerType
MultilayerPerceptron *-- OutputLayerType
MultilayerPerceptron *-- RecurrentLayerType
MultilayerPerceptron *-- TrainingPolicyType
MultilayerPerceptron *-- GradientsManagerType
MultilayerPerceptron - TransferFunctionsPolicy
RecurrentMultilayerPerceptron -|> MultilayerPerceptron
ElmanNetwork -|> RecurrentMultilayerPerceptron

@enduml